<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <description>
        This is the main Spring configuration file with some of the main "core" classes defined. You shouldn't really
        modify this unless you
        know what you're doing!
    </description>
    <import resource="propertyFileConfigurer.xml"/>
    <import resource="jdbcContext.xml"/>


    <!--
      Including this aspectj-autoproxy element will cause spring to automatically
      createByObj proxies around any beans defined in this file that match the pointcuts
      of any aspects defined in this file.
    -->
    <aop:aspectj-autoproxy/>

    <!--
      Declare the TimingAspect that we want to weave into the other beans
      defined in this config file.
    -->
    <bean id="timingAspect" class="org.perf4j.slf4j.aop.TimingAspect"/>


    <!--
        Message source for this context, loaded from localized "messages_xx" files.]

    	Disable the fallback mechanism to the system/JVM locale. By turning off this behavior, CAS
    	will be able to revert back to the default language bundle that is "messages.properties"
    	and will not rely on the JVM default locale which introduces the side effect of rendering
    	the UI in the JVM locale by default.

        Also, explicitly set the default encoding to be UTF-8 when parsing message bundles.
        The default, if not set, is none which forces ISO-8859-1 of java.util.ResourceBundle.
    -->
    <bean id="messageSource" class="com.songouhe.base.util.action.SOHReloadableMessageBundle"
          p:basenames-ref="basenames" p:fallbackToSystemLocale="false" p:defaultEncoding="UTF-8"
          p:cacheSeconds="180" p:useCodeAsDefaultMessage="true" />
    <!--&lt;!&ndash; Theme Resolver &ndash;&gt;-->
     <!--<bean-->
         <!--class="org.springframework.ui.context.support.ResourceBundleThemeSource"-->
         <!--id="themeSource">-->
         <!--<property name="basenamePrefix" value="."></property>-->
     <!--</bean>-->
 <!---->
         <!--<bean id="themeResolver"-->
         <!--class="org.springframework.web.servlet.theme.SessionThemeResolver">-->
         <!--<property name="defaultThemeName" value="uwt-theme-default" />-->
     <!--</bean>-->
      <!--&lt;!&ndash; View Resolver &ndash;&gt;-->
     <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver"-->
           <!--p:order="0">-->
       <!--<property name="basenames">-->
         <!--<util:list>-->
           <!--<value>${tys.viewResolver.basename}</value>-->
           <!--<value>protocol_views</value>-->
         <!--</util:list>-->
       <!--</property>-->
     <!--</bean>-->
 <!---->
     <!--&lt;!&ndash; Locale Resolver &ndash;&gt;-->
     <!--<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" p:defaultLocale="zh_CN" />-->
 <!---->
     <!--<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>-->
    <!---->
    <util:list id="basenames">
        <value>classpath:custom_messages</value>
        <value>classpath:messages</value>
    </util:list>


</beans>
